// Signature format: 2.0
package com.google.firebase.storage.ktx {

  public final class StorageKt {
    method public static operator long component1(@NonNull com.google.firebase.storage.UploadTask.TaskSnapshot);
    method public static operator long component1(@NonNull com.google.firebase.storage.StreamDownloadTask.TaskSnapshot);
    method public static operator long component1(@NonNull com.google.firebase.storage.FileDownloadTask.TaskSnapshot);
    method @NonNull public static operator java.util.List<com.google.firebase.storage.StorageReference> component1(@NonNull com.google.firebase.storage.ListResult);
    method public static operator long component2(@NonNull com.google.firebase.storage.UploadTask.TaskSnapshot);
    method public static operator long component2(@NonNull com.google.firebase.storage.StreamDownloadTask.TaskSnapshot);
    method public static operator long component2(@NonNull com.google.firebase.storage.FileDownloadTask.TaskSnapshot);
    method @NonNull public static operator java.util.List<com.google.firebase.storage.StorageReference> component2(@NonNull com.google.firebase.storage.ListResult);
    method @Nullable public static operator com.google.firebase.storage.StorageMetadata component3(@NonNull com.google.firebase.storage.UploadTask.TaskSnapshot);
    method @NonNull public static operator java.io.InputStream component3(@NonNull com.google.firebase.storage.StreamDownloadTask.TaskSnapshot);
    method @Nullable public static operator String component3(@NonNull com.google.firebase.storage.ListResult);
    method @Nullable public static operator android.net.Uri component4(@NonNull com.google.firebase.storage.UploadTask.TaskSnapshot);
    method @NonNull public static com.google.firebase.storage.FirebaseStorage getStorage(@NonNull com.google.firebase.ktx.Firebase);
    method @NonNull public static <T extends com.google.firebase.storage.StorageTask.SnapshotBase> kotlinx.coroutines.flow.Flow<com.google.firebase.storage.ktx.TaskState<T>> getTaskState(@NonNull com.google.firebase.storage.StorageTask<T>);
    method @NonNull public static com.google.firebase.storage.FirebaseStorage storage(@NonNull com.google.firebase.ktx.Firebase, @NonNull String url);
    method @NonNull public static com.google.firebase.storage.FirebaseStorage storage(@NonNull com.google.firebase.ktx.Firebase, @NonNull com.google.firebase.FirebaseApp app);
    method @NonNull public static com.google.firebase.storage.FirebaseStorage storage(@NonNull com.google.firebase.ktx.Firebase, @NonNull com.google.firebase.FirebaseApp app, @NonNull String url);
    method @NonNull public static com.google.firebase.storage.StorageMetadata storageMetadata(@NonNull kotlin.jvm.functions.Function1<? super com.google.firebase.storage.StorageMetadata.Builder,kotlin.Unit> init);
  }

  public abstract class TaskState<T> {
  }

  public static final class TaskState.InProgress<T> extends com.google.firebase.storage.ktx.TaskState<T> {
    ctor public TaskState.InProgress(@Nullable T snapshot);
    method public T getSnapshot();
    property public final T snapshot;
  }

  public static final class TaskState.Paused<T> extends com.google.firebase.storage.ktx.TaskState<T> {
    ctor public TaskState.Paused(@Nullable T snapshot);
    method public T getSnapshot();
    property public final T snapshot;
  }

}


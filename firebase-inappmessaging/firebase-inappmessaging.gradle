// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'firebase-library'
    id("kotlin-android")
    id 'com.google.protobuf'
    id 'firebase-vendor'
}

firebaseLibrary {
    libraryGroup "inappmessaging"
    testLab.enabled = true
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

android {
    adbOptions {
        timeOutInMs 60 * 1000
    }

    namespace "com.google.firebase.inappmessaging"
    compileSdkVersion project.targetSdkVersion
    defaultConfig {
      minSdkVersion 16
      targetSdkVersion project.targetSdkVersion
      multiDexEnabled true
      versionName version
      testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
      consumerProguardFiles 'proguard.txt'
    }
    sourceSets {
        main {
            java {
            }
            proto {
                srcDir 'src/proto'
            }
        }
        androidTest {
            java {
                srcDir 'src/testUtil'
                srcDir 'src/testData'
            }
        }
        test {
            java {
                srcDir 'src/testUtil'
                srcDir 'src/testData'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}


thirdPartyLicenses {
    add 'Dagger', "${rootDir}/third_party/licenses/apache-2.0.txt"
}

dependencies {
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.27'
    androidTestImplementation "androidx.annotation:annotation:1.0.0"
    androidTestImplementation "androidx.test.ext:junit:$androidxTestJUnitVersion"
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"
    androidTestImplementation "io.grpc:grpc-testing:$grpcVersion"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker:2.28.1'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.awaitility:awaitility:3.1.0'
    androidTestImplementation(project(":integ-testing")){
        exclude group: 'com.google.firebase', module: 'firebase-common'
        exclude group: 'com.google.firebase', module: 'firebase-components'
    }

    annotationProcessor 'com.google.auto.value:auto-value:1.6.5'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'
    annotationProcessor libs.dagger.compiler
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.android.datatransport:transport-api:3.0.0'
    implementation 'com.google.android.gms:play-services-tasks:18.0.1'
    implementation 'com.google.auto.value:auto-value-annotations:1.8.1'
    implementation 'com.google.firebase:firebase-installations-interop:17.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'javax.inject:javax.inject:1'
    implementation project(':protolite-well-known-types')
    implementation('com.google.firebase:firebase-abt:21.1.1') {
         exclude group: 'com.google.firebase', module: 'firebase-common'
         exclude group: 'com.google.firebase', module: 'firebase-components'
     }
    implementation('com.google.firebase:firebase-measurement-connector:18.0.2') {
         exclude group: 'com.google.firebase', module: 'firebase-common'
     }
    implementation("com.google.firebase:firebase-common:20.4.2")
    implementation("com.google.firebase:firebase-common-ktx:20.4.2")
    implementation("com.google.firebase:firebase-components:17.1.5")
    implementation("com.google.firebase:firebase-datatransport:18.2.0"){
         exclude group: 'com.google.firebase', module: 'firebase-common'
         exclude group: 'com.google.firebase', module: 'firebase-components'
     }
    implementation("com.google.firebase:firebase-installations:17.2.0")
    testImplementation "androidx.test.ext:junit:$androidxTestJUnitVersion"
    testImplementation "androidx.test:core:$androidxTestCoreVersion"
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation "io.grpc:grpc-testing:$grpcVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'com.google.guava:guava:30.1-android'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation ("org.robolectric:robolectric:$robolectricVersion") {
         exclude group: 'com.google.protobuf', module: 'protobuf-java'
     }
    testImplementation(project(":integ-testing")){
        exclude group: 'com.google.firebase', module: 'firebase-common'
        exclude group: 'com.google.firebase', module: 'firebase-components'
    }
    vendor (libs.dagger.dagger) {
         exclude group: "javax.inject", module: "javax.inject"
     }
}

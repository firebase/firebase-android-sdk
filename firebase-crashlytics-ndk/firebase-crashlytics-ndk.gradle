// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'firebase-library'
    id 'LicenseResolverPlugin'
}

firebaseLibrary {
    testLab.enabled = true
    publishJavadoc = false
}

android {
    adbOptions {
        timeOutInMs 60 * 1000
    }

    compileSdkVersion project.targetSdkVersion
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion project.targetSdkVersion
        versionName version

        externalNativeBuild {
            ndkBuild {
                arguments '-j4'
                arguments '--output-sync=none'
            }
        }

        consumerProguardFiles 'firebase-crashlytics-ndk-proguard.txt'
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        androidTest {
            java {
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude './src/third_party/**'
    }

    externalNativeBuild {
        ndkBuild {
            path "./src/main/jni/Android.mk"
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def func = fixTrampolineFilenames(variant.baseName)

            tasks.findAll {
                it.name.startsWith("bundleReleaseAar")
            }.each {
                it.dependsOn func
            }

            tasks.findAll {
                it.name.startsWith("externalNativeBuild")
            }.each {
                func.dependsOn it
            }
        }
    }
}


import java.nio.file.Files
import java.nio.file.StandardCopyOption

// There is not any normal way to package native executables in an Android APK.
// It is normal to package native code as a loadable module but Android's APK
// installer will ignore files not named like a shared object, so give the
// handler executable an acceptable name
def fixTrampolineFilenames(variantBaseName) {
    project.task("fixTrampolineFilenames${variantBaseName}").configure({
    }).doFirst {
        ["x86", "x86_64", "armeabi-v7a", "arm64-v8a"].each { arch ->
            def initial = new File(
                    "${buildDir}/intermediates/ndkBuild/${variantBaseName}/obj/local/${arch}/crashlytics-trampoline")
            def renamed = new File(
                    "${buildDir}/intermediates/ndkBuild/${variantBaseName}/obj/local/${arch}/libcrashlytics-trampoline.so")

            // There is no need to delete the original file, it will not be
            // packaged into the APK
            Files.copy(initial.toPath(), renamed.toPath(), StandardCopyOption.REPLACE_EXISTING)
        }
    }
}

thirdPartyLicenses {
    add 'Crashpad', "file://${rootDir}/third_party/licenses/apache-2.0.txt"
}

dependencies {
    implementation project(':firebase-common')
    implementation project(':firebase-components')
    implementation project(':firebase-crashlytics')
    implementation 'com.google.android.gms:play-services-basement:17.0.0'

    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.3.3'

    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'org.mockito:mockito-core:3.3.3'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker:2.25.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.25.0'
    androidTestImplementation "com.google.protobuf:protobuf-javalite:$javaliteVersion"
}

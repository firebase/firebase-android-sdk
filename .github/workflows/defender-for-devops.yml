# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Microsoft Security DevOps (MSDO) is a command line application which integrates static analysis tools into the development cycle.
# MSDO installs, configures and runs the latest versions of static analysis tools
# (including, but not limited to, SDL/security and compliance tools).
#
# The Microsoft Security DevOps action is currently in beta and runs on the windows-latest queue,
# as well as Windows self hosted agents. ubuntu-latest support coming soon.
#
# For more information about the action , check out https://github.com/microsoft/security-devops-action
#
# Please note this workflow do not integrate your GitHub Org with Microsoft Defender For DevOps. You have to create an integration
# and provide permission before this can report data back to azure.
# Read the official documentation here : https://learn.microsoft.com/en-us/azure/defender-for-cloud/quickstart-onboard-github

name: "Microsoft Defender For Devops"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '15 23 * * 2'

jobs:
  MSDO:
    # currently only windows latest is supported
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          5.0.x
          6.0.x
    - name: Run Microsoft Security DevOps
      uses: microsoft/security-devops-action@v1.6.0
      id: msdo
    - name: Upload results to Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.msdo.outputs.sarifFile }}
            - name: Create Artifact YAML
  # You may pin to the exact commit or the version.
  # uses: opencontextinc/create-artifact-yaml@218aadb9180fd982c8f2aaa592573297bdb9550e
  uses: opencontextinc/create-artifact-yaml@v1.0.1
  with:
    # Type of artifact. One of sbom, container, package, or image
    type: 
    # URL/URI of the artifact
    url: 
    # Directory to save YAML files to. If not specified then the directory oc-artifact-yaml will be used.
    directory: # optional
                      - name: OpenShift Client Installer
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/oc-installer@35b60c3f9757ae4301521556e1b75ff6f59f8d7c
  uses: redhat-actions/oc-installer@v1.2
  with:
    # "oc version to install. It can be a version (eg. 4.6) or a URL pointing to an oc download.
If left blank, the latest oc is installed."

    oc_version: # default is latest
          

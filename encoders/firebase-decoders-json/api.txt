// Signature format: 3.0
package com.google.firebase.decoders {

  public abstract class Safe<T> {
    ctor public Safe();
  }

  public abstract class TypeToken<T> {
    method public static <T> com.google.firebase.decoders.TypeToken<T!> of(com.google.firebase.decoders.Safe<T!>);
    method public static <T> com.google.firebase.decoders.TypeToken<T!> of(Class<T!>);
  }

  public static class TypeToken.ArrayToken<T> extends com.google.firebase.decoders.TypeToken<T!> {
    method public com.google.firebase.decoders.TypeToken<? extends java.lang.Object!> getComponentType();
  }

  public static class TypeToken.ClassToken<T> extends com.google.firebase.decoders.TypeToken<T!> {
    method public Class<T!> getRawType();
    method public com.google.firebase.decoders.TypeTokenContainer getTypeArguments();
  }

  public final class TypeTokenContainer {
    ctor public TypeTokenContainer(com.google.firebase.decoders.TypeToken![]);
    method public <T> com.google.firebase.decoders.TypeToken<T!> at(int);
    field public static final com.google.firebase.decoders.TypeTokenContainer EMPTY;
  }

}


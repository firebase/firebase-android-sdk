// Signature format: 3.0
package com.google.firebase.encoders.proto {

  public interface ProtoEnum {
    method public int getNumber();
  }

  @com.google.firebase.encoders.annotations.ExtraProperty @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface Protobuf {
    method public abstract com.google.firebase.encoders.proto.Protobuf.IntEncoding intEncoding() default com.google.firebase.encoders.proto.Protobuf.IntEncoding.DEFAULT;
    method public abstract int tag();
  }

  public enum Protobuf.IntEncoding {
    enum_constant public static final com.google.firebase.encoders.proto.Protobuf.IntEncoding DEFAULT;
    enum_constant public static final com.google.firebase.encoders.proto.Protobuf.IntEncoding FIXED;
    enum_constant public static final com.google.firebase.encoders.proto.Protobuf.IntEncoding SIGNED;
  }

  public class ProtobufEncoder {
    method public static com.google.firebase.encoders.proto.ProtobufEncoder.Builder! builder();
    method public byte[] encode(Object);
    method public void encode(Object, OutputStream);
  }

  public static final class ProtobufEncoder.Builder implements com.google.firebase.encoders.config.EncoderConfig<com.google.firebase.encoders.proto.ProtobufEncoder.Builder!> {
    ctor public ProtobufEncoder.Builder();
    method public com.google.firebase.encoders.proto.ProtobufEncoder! build();
    method public com.google.firebase.encoders.proto.ProtobufEncoder.Builder configureWith(com.google.firebase.encoders.config.Configurator);
    method public <U> com.google.firebase.encoders.proto.ProtobufEncoder.Builder registerEncoder(Class<U!>, com.google.firebase.encoders.ObjectEncoder<? super U!>);
    method public <U> com.google.firebase.encoders.proto.ProtobufEncoder.Builder registerEncoder(Class<U!>, com.google.firebase.encoders.ValueEncoder<? super U!>);
    method public com.google.firebase.encoders.proto.ProtobufEncoder.Builder registerFallbackEncoder(com.google.firebase.encoders.ObjectEncoder<Object!>);
  }

}


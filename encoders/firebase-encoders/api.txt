// Signature format: 3.0
package com.google.firebase.encoders {

  public interface DataEncoder {
    method public String encode(Object);
    method public void encode(Object, Writer);
  }

  public final class EncodingException {
    ctor public EncodingException(String);
    ctor public EncodingException(String, Exception);
  }

  public final class FieldDescriptor {
    method public static com.google.firebase.encoders.FieldDescriptor.Builder builder(String);
    method public boolean equals(Object?);
    method public String getName();
    method public <T extends Annotation> T? getProperty(Class<T!>);
    method public int hashCode();
    method public static com.google.firebase.encoders.FieldDescriptor of(String);
    method public String toString();
  }

  public static final class FieldDescriptor.Builder {
    method public com.google.firebase.encoders.FieldDescriptor build();
    method public <T extends Annotation> com.google.firebase.encoders.FieldDescriptor.Builder withProperty(T);
  }

  public interface ObjectEncoder<T> {
  }

  public interface ObjectEncoderContext {
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, boolean);
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, double);
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, float);
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, int);
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, long);
    method public com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor, Object?);
    method @Deprecated public com.google.firebase.encoders.ObjectEncoderContext add(String, boolean);
    method @Deprecated public com.google.firebase.encoders.ObjectEncoderContext add(String, double);
    method @Deprecated public com.google.firebase.encoders.ObjectEncoderContext add(String, int);
    method @Deprecated public com.google.firebase.encoders.ObjectEncoderContext add(String, long);
    method @Deprecated public com.google.firebase.encoders.ObjectEncoderContext add(String, Object?);
    method public com.google.firebase.encoders.ObjectEncoderContext inline(Object?);
    method public com.google.firebase.encoders.ObjectEncoderContext nested(com.google.firebase.encoders.FieldDescriptor);
    method public com.google.firebase.encoders.ObjectEncoderContext nested(String);
  }

  public interface ValueEncoder<T> {
  }

  public interface ValueEncoderContext {
    method public com.google.firebase.encoders.ValueEncoderContext add(boolean);
    method public com.google.firebase.encoders.ValueEncoderContext add(byte[]);
    method public com.google.firebase.encoders.ValueEncoderContext add(double);
    method public com.google.firebase.encoders.ValueEncoderContext add(float);
    method public com.google.firebase.encoders.ValueEncoderContext add(int);
    method public com.google.firebase.encoders.ValueEncoderContext add(long);
    method public com.google.firebase.encoders.ValueEncoderContext add(String?);
  }

}

package com.google.firebase.encoders.annotations {

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface Encodable {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public static @interface Encodable.Field {
    method public abstract boolean inline() default false;
    method public abstract String name() default "";
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public static @interface Encodable.Ignore {
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface ExtraProperty {
    method public abstract Class<? extends java.lang.Object!>[] allowedTypes() default {};
  }

}

package com.google.firebase.encoders.config {

  public interface Configurator {
    method public void configure(com.google.firebase.encoders.config.EncoderConfig<? extends java.lang.Object!>);
  }

  public interface EncoderConfig<T extends com.google.firebase.encoders.config.EncoderConfig<T>> {
    method public <U> T registerEncoder(Class<U!>, com.google.firebase.encoders.ObjectEncoder<? super U!>);
    method public <U> T registerEncoder(Class<U!>, com.google.firebase.encoders.ValueEncoder<? super U!>);
  }

}


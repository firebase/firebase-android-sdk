// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://storage.googleapis.com/android-ci/mvn/'
            metadataSources {
                artifact()
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:3.1.0'
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-appdistribution-gradle:5.0.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.5'
        classpath libs.spotless.plugin.gradle
    }
}

apply from: 'sdkProperties.gradle'
apply from: "gradle/errorProne.gradle"

apply plugin: com.google.firebase.gradle.plugins.PublishingPlugin

apply plugin: com.google.firebase.gradle.plugins.ci.ContinuousIntegrationPlugin
apply plugin: com.google.firebase.gradle.plugins.ci.SmokeTestsPlugin

firebaseContinuousIntegration {
    ignorePaths = [
            /.*\.gitignore$/,
            /.*\/.*.md$/,
            /.*\.github.*/,
    ]
}

configure(subprojects) {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/android-ci/mvn/'
            metadataSources {
                artifact()
            }
        }
    }

    apply plugin: "com.diffplug.spotless"

    spotless {
        java {
            target 'src/**/*.java'
            targetExclude '**/test/resources/**'
            googleJavaFormat('1.22.0').reorderImports(true).skipJavadocFormatting()
        }
        kotlin {
            target 'src/**/*.kt'
            ktfmt('0.41').googleStyle()
        }
        kotlinGradle {
            target('*.gradle.kts') // default target for kotlinGradle
            ktfmt('0.41').googleStyle()
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

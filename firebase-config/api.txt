// Signature format: 2.0
package com.google.firebase.remoteconfig {

  public class FirebaseRemoteConfig {
    method public Task<Boolean> activate();
    method @Deprecated public boolean activateFetched();
    method public Task<FirebaseRemoteConfigInfo> ensureInitialized();
    method public Task<Void> fetch();
    method public Task<Void> fetch(long);
    method public Task<Boolean> fetchAndActivate();
    method public Map<String,FirebaseRemoteConfigValue> getAll();
    method public boolean getBoolean(String);
    method public byte[] getByteArray(String);
    method public double getDouble(String);
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigInfo getInfo();
    method public static com.google.firebase.remoteconfig.FirebaseRemoteConfig getInstance();
    method public static com.google.firebase.remoteconfig.FirebaseRemoteConfig getInstance(FirebaseApp);
    method public Set<String> getKeysByPrefix(String);
    method public long getLong(String);
    method public String getString(String);
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigValue getValue(String);
    method public Task<Void> reset();
    method @Deprecated public void setConfigSettings(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings);
    method public Task<Void> setConfigSettingsAsync(com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings);
    method @Deprecated public void setDefaults(Map<String,Object>);
    method public void setDefaults(int);
    method public Task<Void> setDefaultsAsync(Map<String,Object>);
    method public Task<Void> setDefaultsAsync(int);
    field public static final boolean DEFAULT_VALUE_FOR_BOOLEAN = false;
    field public static final byte[] DEFAULT_VALUE_FOR_BYTE_ARRAY;
    field public static final double DEFAULT_VALUE_FOR_DOUBLE = 0.0;
    field public static final long DEFAULT_VALUE_FOR_LONG = 0L; // 0x0L
    field public static final String DEFAULT_VALUE_FOR_STRING;
    field public static final int LAST_FETCH_STATUS_FAILURE = 1; // 0x1
    field public static final int LAST_FETCH_STATUS_NO_FETCH_YET = 0; // 0x0
    field public static final int LAST_FETCH_STATUS_SUCCESS = -1; // 0xffffffff
    field public static final int LAST_FETCH_STATUS_THROTTLED = 2; // 0x2
    field public static final int VALUE_SOURCE_DEFAULT = 1; // 0x1
    field public static final int VALUE_SOURCE_REMOTE = 2; // 0x2
    field public static final int VALUE_SOURCE_STATIC = 0; // 0x0
  }

  public class FirebaseRemoteConfigClientException extends com.google.firebase.remoteconfig.FirebaseRemoteConfigException {
    ctor public FirebaseRemoteConfigClientException(String);
    ctor public FirebaseRemoteConfigClientException(String, Throwable);
  }

  public class FirebaseRemoteConfigException {
    ctor public FirebaseRemoteConfigException(String);
    ctor public FirebaseRemoteConfigException(String, Throwable);
  }

  @Deprecated public class FirebaseRemoteConfigFetchException extends com.google.firebase.remoteconfig.FirebaseRemoteConfigException {
    ctor @Deprecated public FirebaseRemoteConfigFetchException(String);
    ctor @Deprecated public FirebaseRemoteConfigFetchException(String, Throwable);
  }

  public class FirebaseRemoteConfigFetchThrottledException extends com.google.firebase.remoteconfig.FirebaseRemoteConfigFetchException {
    ctor public FirebaseRemoteConfigFetchThrottledException(long);
    method public long getThrottleEndTimeMillis();
  }

  public interface FirebaseRemoteConfigInfo {
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings getConfigSettings();
    method public long getFetchTimeMillis();
    method public int getLastFetchStatus();
  }

  public class FirebaseRemoteConfigServerException extends com.google.firebase.remoteconfig.FirebaseRemoteConfigException {
    ctor public FirebaseRemoteConfigServerException(int, String);
    ctor public FirebaseRemoteConfigServerException(int, String, Throwable);
    method public int getHttpStatusCode();
  }

  public class FirebaseRemoteConfigSettings {
    method public long getFetchTimeoutInSeconds();
    method public long getMinimumFetchIntervalInSeconds();
    method @Deprecated public boolean isDeveloperModeEnabled();
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings.Builder toBuilder();
  }

  public static class FirebaseRemoteConfigSettings.Builder {
    ctor public FirebaseRemoteConfigSettings.Builder();
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings build();
    method @Deprecated public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings.Builder setDeveloperModeEnabled(boolean);
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings.Builder setFetchTimeoutInSeconds(long);
    method public com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings.Builder setMinimumFetchIntervalInSeconds(long);
  }

  public interface FirebaseRemoteConfigValue {
    method public boolean asBoolean();
    method public byte[] asByteArray();
    method public double asDouble();
    method public long asLong();
    method public String asString();
    method public int getSource();
  }

}


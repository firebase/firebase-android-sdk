// Signature format: 2.0
package com.google.firebase.functions {

  public final class FirebaseFunctions {
    method @NonNull public com.google.firebase.functions.HttpsCallableReference getHttpsCallable(@NonNull String name);
    method @NonNull public com.google.firebase.functions.HttpsCallableReference getHttpsCallable(@NonNull String name, @NonNull com.google.firebase.functions.HttpsCallableOptions options);
    method @NonNull public com.google.firebase.functions.HttpsCallableReference getHttpsCallableFromUrl(@NonNull java.net.URL url);
    method @NonNull public com.google.firebase.functions.HttpsCallableReference getHttpsCallableFromUrl(@NonNull java.net.URL url, @NonNull com.google.firebase.functions.HttpsCallableOptions options);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull com.google.firebase.FirebaseApp app, @NonNull String regionOrCustomDomain);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull com.google.firebase.FirebaseApp app);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull String regionOrCustomDomain);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions getInstance();
    method public void useEmulator(@NonNull String host, int port);
    method @Deprecated public void useFunctionsEmulator(@NonNull String origin);
    field @NonNull public static final com.google.firebase.functions.FirebaseFunctions.Companion Companion;
  }

  public static final class FirebaseFunctions.Companion {
    method @NonNull public com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull com.google.firebase.FirebaseApp app, @NonNull String regionOrCustomDomain);
    method @NonNull public com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull com.google.firebase.FirebaseApp app);
    method @NonNull public com.google.firebase.functions.FirebaseFunctions getInstance(@NonNull String regionOrCustomDomain);
    method @NonNull public com.google.firebase.functions.FirebaseFunctions getInstance();
  }

  public final class FirebaseFunctionsException extends com.google.firebase.FirebaseException {
    method @NonNull public com.google.firebase.functions.FirebaseFunctionsException.Code getCode();
    method @Nullable public Object getDetails();
    property @NonNull public final com.google.firebase.functions.FirebaseFunctionsException.Code code;
    property @Nullable public final Object details;
  }

  public enum FirebaseFunctionsException.Code {
    method @NonNull public static final com.google.firebase.functions.FirebaseFunctionsException.Code fromHttpStatus(int status);
    method @NonNull public static final com.google.firebase.functions.FirebaseFunctionsException.Code fromValue(int value);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctionsException.Code valueOf(@NonNull String name) throws java.lang.IllegalArgumentException;
    method @NonNull public static com.google.firebase.functions.FirebaseFunctionsException.Code[] values();
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code ABORTED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code ALREADY_EXISTS;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code CANCELLED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code DATA_LOSS;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code DEADLINE_EXCEEDED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code FAILED_PRECONDITION;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code INTERNAL;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code INVALID_ARGUMENT;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code NOT_FOUND;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code OK;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code OUT_OF_RANGE;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code PERMISSION_DENIED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code RESOURCE_EXHAUSTED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code UNAUTHENTICATED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code UNAVAILABLE;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code UNIMPLEMENTED;
    enum_constant public static final com.google.firebase.functions.FirebaseFunctionsException.Code UNKNOWN;
    field @NonNull public static final com.google.firebase.functions.FirebaseFunctionsException.Code.Companion Companion;
  }

  public static final class FirebaseFunctionsException.Code.Companion {
    method @NonNull public com.google.firebase.functions.FirebaseFunctionsException.Code fromHttpStatus(int status);
    method @NonNull public com.google.firebase.functions.FirebaseFunctionsException.Code fromValue(int value);
  }

  public final class FunctionsKt {
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.Firebase, @NonNull String regionOrCustomDomain);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.Firebase, @NonNull com.google.firebase.FirebaseApp app);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.Firebase, @NonNull com.google.firebase.FirebaseApp app, @NonNull String regionOrCustomDomain);
    method @NonNull public static com.google.firebase.functions.FirebaseFunctions getFunctions(@NonNull com.google.firebase.Firebase);
    method @NonNull public static com.google.firebase.functions.HttpsCallableReference getHttpsCallable(@NonNull com.google.firebase.functions.FirebaseFunctions, @NonNull String name, @NonNull kotlin.jvm.functions.Function1<? super com.google.firebase.functions.HttpsCallableOptions.Builder,kotlin.Unit> init);
    method @NonNull public static com.google.firebase.functions.HttpsCallableReference getHttpsCallableFromUrl(@NonNull com.google.firebase.functions.FirebaseFunctions, @NonNull java.net.URL url, @NonNull kotlin.jvm.functions.Function1<? super com.google.firebase.functions.HttpsCallableOptions.Builder,kotlin.Unit> init);
  }

  public final class HttpsCallableOptions {
    method public boolean getLimitedUseAppCheckTokens();
    field public final boolean limitedUseAppCheckTokens;
  }

  public static final class HttpsCallableOptions.Builder {
    ctor public HttpsCallableOptions.Builder();
    method @NonNull public com.google.firebase.functions.HttpsCallableOptions build();
    method public boolean getLimitedUseAppCheckTokens();
    method @NonNull public com.google.firebase.functions.HttpsCallableOptions.Builder setLimitedUseAppCheckTokens(boolean limitedUse);
    field public boolean limitedUseAppCheckTokens;
  }

  public final class HttpsCallableReference {
    method @NonNull public com.google.android.gms.tasks.Task<com.google.firebase.functions.HttpsCallableResult> call(@Nullable Object data);
    method @NonNull public com.google.android.gms.tasks.Task<com.google.firebase.functions.HttpsCallableResult> call();
    method public long getTimeout();
    method public void setTimeout(long timeout, @NonNull java.util.concurrent.TimeUnit units);
    method @NonNull public com.google.firebase.functions.HttpsCallableReference withTimeout(long timeout, @NonNull java.util.concurrent.TimeUnit units);
    property public final long timeout;
  }

  public final class HttpsCallableResult {
    method @Nullable public Object getData();
    field @Nullable public final Object data;
  }

}

package com.google.firebase.functions.ktx {

  public final class FunctionsKt {
    method @Deprecated @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.ktx.Firebase, @NonNull String regionOrCustomDomain);
    method @Deprecated @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.ktx.Firebase, @NonNull com.google.firebase.FirebaseApp app);
    method @Deprecated @NonNull public static com.google.firebase.functions.FirebaseFunctions functions(@NonNull com.google.firebase.ktx.Firebase, @NonNull com.google.firebase.FirebaseApp app, @NonNull String regionOrCustomDomain);
    method @Deprecated @NonNull public static com.google.firebase.functions.FirebaseFunctions getFunctions(@NonNull com.google.firebase.ktx.Firebase);
    method @Deprecated @NonNull public static com.google.firebase.functions.HttpsCallableReference getHttpsCallable(@NonNull com.google.firebase.functions.FirebaseFunctions, @NonNull String name, @NonNull kotlin.jvm.functions.Function1<? super com.google.firebase.functions.HttpsCallableOptions.Builder,kotlin.Unit> init);
    method @Deprecated @NonNull public static com.google.firebase.functions.HttpsCallableReference getHttpsCallableFromUrl(@NonNull com.google.firebase.functions.FirebaseFunctions, @NonNull java.net.URL url, @NonNull kotlin.jvm.functions.Function1<? super com.google.firebase.functions.HttpsCallableOptions.Builder,kotlin.Unit> init);
  }

}


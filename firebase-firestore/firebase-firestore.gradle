// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'firebase-library'
    id 'com.google.protobuf'
}

firebaseLibrary {
    publishSources = true
    testLab {
        enabled = true
        timeout = '30m'
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}
android {
    adbOptions {
        timeOutInMs 60 * 1000
    }

    compileSdkVersion project.targetSdkVersion
    defaultConfig {
        targetSdkVersion project.targetSdkVersion
        minSdkVersion 19
        versionName version
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard.txt'
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/proto'
            }
            java {
            }
        }
        test {
            java {
                srcDir 'src/testUtil/java'
                srcDir 'src/roboUtil/java'
            }
        }
        androidTest {
            java {
                srcDir 'src/testUtil/java'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions.unitTests.includeAndroidResources = true

    // Acceptable values are: 'emulator', 'qa', 'nightly', and 'prod'.
    ext.targetBackend = 'emulator'
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

android.libraryVariants.all { variant ->
    if (findProperty('targetBackend')) {
        variant.buildConfigField("String", "TARGET_BACKEND", "\"${property("targetBackend")}\"")
    } else {
        // By default set the target backend to 'emulator'
        variant.buildConfigField("String", "TARGET_BACKEND", "\"emulator\"")
    }

    def localProps = new Properties()

    try {
    file("local.properties").withInputStream { localProps.load(it) }
    } catch (FileNotFoundException e) {
    }
}

googleJavaFormat {
    exclude 'src/testUtil/java/com/google/firebase/firestore/testutil/Assert.java'
    exclude 'src/testUtil/java/com/google/firebase/firestore/testutil/ThrowingRunnable.java'
}

dependencies {
    implementation 'com.google.firebase:firebase-annotations:16.2.0'
    implementation 'com.google.firebase:firebase-common:20.3.1'
    implementation project(':protolite-well-known-types')
    implementation 'com.google.firebase:firebase-database-collection:18.0.1'
    implementation 'com.google.firebase:firebase-components:17.1.0'
    implementation 'com.google.firebase:firebase-appcheck-interop:16.1.1'

    //To provide @Generated annotations
    compileOnly 'javax.annotation:jsr250-api:1.0'

    javadocClasspath 'com.google.auto.value:auto-value-annotations:1.6.6'

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-android:$grpcVersion"
    implementation 'com.google.android.gms:play-services-basement:18.1.0'
    implementation 'com.google.android.gms:play-services-tasks:18.0.1'
    implementation 'com.google.android.gms:play-services-base:18.0.1'

    implementation('com.google.firebase:firebase-auth-interop:19.0.2') {
        exclude group: "com.google.firebase", module: "firebase-common"
    }

    compileOnly 'com.google.auto.value:auto-value-annotations:1.6.6'
    androidTestAnnotationProcessor 'com.google.auto.value:auto-value:1.6.5'
    annotationProcessor 'com.google.auto.value:auto-value:1.6.5'

    testImplementation project(':firebase-firestore')
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    testImplementation 'com.google.guava:guava-testlib:12.0-rc2'

    androidTestImplementation project(':firebase-firestore')
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation("com.google.truth:truth:$googleTruthVersion"){
        exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
    }
    androidTestImplementation 'org.mockito:mockito-core:2.25.0'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        // TODO(wuandy): Also add "-Xlint:unchecked". But currently that
        // enables 100+ warnings due to our generated source code.
        // TODO(wuandy): Re-enable error on warnings once errorprone issues are fixed.
        options.compilerArgs << "-Xlint:deprecation" // << "-Werror"
    }
}

// ==========================================================================
// Copy from here down if you want to use the google-services plugin in your
// androidTest integration tests.
// ==========================================================================
ext.packageName = "com.google.firebase.firestore"
apply from: '../gradle/googleServices.gradle'

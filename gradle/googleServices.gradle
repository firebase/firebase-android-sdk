// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Copy google-services JSON file specified in FIREBASE_GOOGLE_SERVICES_PATH
// environment variable(default: "${project.rootDir}/google-services.json").
// Note that this fails silently.
task copyRootGoogleServices(type: Copy) {
    from(System.env.FIREBASE_GOOGLE_SERVICES_PATH ?: "${rootDir}/google-services.json")
    into projectDir
    rename {
        'google-services.json'
    }

    filter { String line ->
        return line.replaceAll(/"package_name":\s+".*"/) {
            "\"package_name\": \"${packageName}\""
        }
    }
}

// Before the google-services plugin tries to process the JSON file, attempt
// to copy it from the root project.
afterEvaluate {
    if (tasks.findByName("processReleaseGoogleServices")) {
        processReleaseGoogleServices.dependsOn 'copyRootGoogleServices'
    }
}

// Detect testing if the command contains any task with both the module name
// (firebase-firestore) and the testing keyword.
//
// Note: this only works if the command is run explicitly, not if it's just
// somewhere in the task graph (for instance if you ran
// ./gradlew test at the root project).
def isTesting = getGradle().getStartParameter().getTaskNames().any({ String taskName ->
    def hasProjectTestTask = taskName.contains("$name") &&  ['AndroidTest', 'connectedCheck', 'deviceCheck'].any({ taskName.contains(it)})
    return hasProjectTestTask || taskName.contains('connectedCheck') || taskName.contains('deviceCheck')
})

if (isTesting) {
    println '[test] applying google-services plugin'
    apply plugin: 'com.google.gms.google-services'
}

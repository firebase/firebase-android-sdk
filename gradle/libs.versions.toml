[versions]
# javalite, protoc and protobufjavautil versions should be in sync while updating and
# it needs to match the protobuf version which grpc has transitive dependency on, which
# needs to match the version of grpc that grpc-kotlin has a transitive dependency on.
androidGradlePlugin = "8.3.2"
android-lint = "31.3.2"
appcompat = "1.7.0"
autovalue = "1.10.1"
autoValueParcel = "0.2.6"
awaitility = "3.1.0"
browser = "1.3.0"
cardview = "1.0.0"
checkerQual = "2.5.2"
constraintlayout = "2.1.4"
coreKtx = "1.9.0"
coroutines = "1.7.3"
dagger = "2.43.2"
dexmaker = "2.28.1"
dexmakerVersion = "1.2"
espressoCore = "3.6.1"
featureDelivery = "2.1.0"
firebaseCommon = "21.0.0"
firebaseComponents = "18.0.0"
glide = "4.11.0"
googleApiClient = "1.30.9"
grpc = "1.62.2"
grpcKotlin = "1.4.1"
hamcrest = "2.2"
hamcrestJunit = "2.0.0.0"
hamcrestLibrary = "2.2"
httpclientAndroid = "4.3.5.1"
integrity = "1.2.0"
jacksonCore = "2.13.1"
jacksonDatabind = "2.13.1"
javalite = "3.25.5"
jsonassert = "1.5.0"
kotestAssertionsCore = "5.5.5"
kotlin = "1.8.22"
ktorVersion = "2.3.2"
legacySupportV4 = "1.0.0"
lifecycleProcess = "2.3.1"
material = "1.12.0"
mavenResolverApi = "1.9.22"
mavenResolverProvider = "3.9.9"
mockitoAndroid = "3.4.0"
mockito = "5.2.0"
mockk = "1.13.11"
playServicesCloudMessaging = "17.2.0"
playServicesStats = "17.0.2"
playServicesVision = "20.1.3"
protoGoogleCommonProtos = "1.18.0"
reactiveStreams = "1.0.3"
runner = "1.0.2"
rxandroid = "2.0.2"
rxjava = "2.1.14"
serialization-plugin = "1.8.22"
protoc = "3.25.5"
slf4jNop = "2.0.9"
testServices = "1.2.0"
truth = "1.4.2"
robolectric = "4.12"
protobufjavautil = "3.25.5"
kotest = "5.9.0" # Do not use 5.9.1 because it reverts the fix for https://github.com/kotest/kotest/issues/3981
quickcheck = "0.6"
serialization = "1.5.1"
spotless = "7.0.0.BETA3"
androidx-test-core="1.5.0"
androidx-test-junit="1.1.5"
androidx-test-truth = "1.5.0"
wiremockStandalone = "2.26.3"
truthProtoExtension = "1.0"

[libraries]
android-gradlePlugin-gradle = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
android-gradlePlugin-gradle-api = { group = "com.android.tools.build", name = "gradle-api", version.ref = "androidGradlePlugin" }
android-gradlePlugin-builder-test-api = { group = "com.android.tools.build", name = "builder-test-api", version.ref = "androidGradlePlugin" }
android-lint = { module = "com.android.tools.lint:lint", version.ref = "android-lint" }
android-lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "android-lint" }
android-lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "android-lint" }
android-lint-tests = { module = "com.android.tools.lint:lint-tests", version.ref = "android-lint" }
android-lint-testutils = { module = "com.android.tools:testutils", version.ref = "android-lint" }
androidx-annotation = { module = "androidx.annotation:annotation", version = "1.5.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-core = { module = "androidx.core:core", version = "1.2.0" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-espresso-idling-resource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espressoCore" }
androidx-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoCore" }
androidx-futures = { module = "androidx.concurrent:concurrent-futures", version = "1.1.0" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycleProcess" }
androidx-test-services = { module = "androidx.test.services:test-services", version.ref = "testServices" }
auth0-jwt = { module = "com.auth0:java-jwt", version = "4.4.0" }
auto-value-parcel = { module = "com.ryanharter.auto.value:auto-value-parcel", version.ref = "autoValueParcel" }
autovalue = { module = "com.google.auto.value:auto-value", version.ref = "autovalue" }
autovalue-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autovalue" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checkerQual" }
compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dexmaker = { module = "com.linkedin.dexmaker:dexmaker", version.ref = "dexmaker" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version = "2.26.0" }
feature-delivery = { module = "com.google.android.play:feature-delivery", version.ref = "featureDelivery" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }
firebase-common = { module = "com.google.firebase:firebase-common", version.ref = "firebaseCommon" }
firebase-components = { module = "com.google.firebase:firebase-components", version.ref = "firebaseComponents" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
google-api-client = { module = "com.google.api-client:google-api-client", version.ref = "googleApiClient" }
google-dexmaker = { module = "com.google.dexmaker:dexmaker", version.ref = "dexmakerVersion" }
grpc-android = { module = "io.grpc:grpc-android", version.ref = "grpc" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpcKotlin" }
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpc" }
grpc-protobuf-lite = { module = "io.grpc:grpc-protobuf-lite", version.ref = "grpc" }
grpc-testing = { module= "io.grpc:grpc-testing", version.ref="grpc" }
grpc-protoc-gen-java = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
grpc-protoc-gen-kotlin = { module = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "grpcKotlin" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
hamcrest-junit = { module = "org.hamcrest:hamcrest-junit", version.ref = "hamcrestJunit" }
hamcrest-library = { module = "org.hamcrest:hamcrest-library", version.ref = "hamcrestLibrary" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
httpclient-android = { module = "org.apache.httpcomponents:httpclient-android", version.ref = "httpclientAndroid" }
integrity = { module = "com.google.android.play:integrity", version.ref = "integrity" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jacksonDatabind" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jacksonCore" }
javax-annotation-jsr250 = { module = "javax.annotation:jsr250-api", version = "1.0" }
javax-inject = { module = "javax.inject:javax.inject", version = "1" }
jsonassert = { module = "org.skyscreamer:jsonassert", version.ref = "jsonassert" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotestAssertionsCore" }
kotest-assertions-json = { module = "io.kotest:kotest-assertions-json", version.ref = "kotestAssertionsCore" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-coroutines-tasks = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorVersion" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
material = { module = "com.google.android.material:material", version.ref = "material" }
maven-resolver-api = { module = "org.apache.maven.resolver:maven-resolver-api", version.ref = "mavenResolverApi" }
maven-resolver-connector-basic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "mavenResolverApi" }
maven-resolver-impl = { module = "org.apache.maven.resolver:maven-resolver-impl", version.ref = "mavenResolverApi" }
maven-resolver-provider = { module = "org.apache.maven:maven-resolver-provider", version.ref = "mavenResolverProvider" }
maven-resolver-transport-file = { module = "org.apache.maven.resolver:maven-resolver-transport-file", version.ref = "mavenResolverApi" }
maven-resolver-transport-http = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "mavenResolverApi" }
maven-resolver-util = { module = "org.apache.maven.resolver:maven-resolver-util", version.ref = "mavenResolverApi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version = "3.12.13" }
org-json = { module = "org.json:json", version = "20240303" }
play-services-cloud-messaging = { module = "com.google.android.gms:play-services-cloud-messaging", version.ref = "playServicesCloudMessaging" }
play-services-stats = { module = "com.google.android.gms:play-services-stats", version.ref = "playServicesStats" }
play-services-vision = { module = "com.google.android.gms:play-services-vision", version.ref = "playServicesVision" }
playservices-base = { module = "com.google.android.gms:play-services-base", version = "18.1.0" }
playservices-basement = { module = "com.google.android.gms:play-services-basement", version = "18.3.0" }
playservices-tasks = { module = "com.google.android.gms:play-services-tasks", version = "18.1.0" }
proto-google-common-protos = { module = "com.google.api.grpc:proto-google-common-protos", version.ref = "protoGoogleCommonProtos" }
protoc = { module = "com.google.protobuf:protoc", version.ref = "protoc" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "javalite" }
protobuf-java-lite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "javalite" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "javalite" }

# Test libs
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-test-truth = { module = "androidx.test.ext:truth", version.ref = "androidx-test-truth" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-core" }
androidx-test-runner = { module = "androidx.test:runner", version = "1.5.2" }
junit = { module = "junit:junit", version = "4.13.2" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockito-mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-dexmaker = { module = "com.linkedin.dexmaker:dexmaker-mockito", version = "2.28.3" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
reactive-streams = { module = "org.reactivestreams:reactive-streams", version.ref = "reactiveStreams" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
runner = { module = "com.android.support.test:runner", version.ref = "runner" }
rxjava = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava" }
rxandroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroid" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4jNop" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
truth-liteproto-extension = { module = "com.google.truth.extensions:truth-liteproto-extension", version.ref = "truth" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobufjavautil" }
kotest-runner = { module = "io.kotest:kotest-runner-junit4-jvm", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
kotest-property-arbs = { module = "io.kotest.extensions:kotest-property-arbs", version = "2.1.2" }
quickcheck = { module = "net.java:quickcheck", version.ref = "quickcheck" }
spotless-plugin-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
truth-proto-extension = { module = "com.google.truth.extensions:truth-proto-extension", version.ref = "truthProtoExtension" }
turbine = { module = "app.cash.turbine:turbine", version = "1.0.0" }

# Remove three-ten-abp once minSdkVersion is changed to 26 or later, and, instead use the
# correspondingly-named classes from the java.time package, which should be drop-in replacements.
# Do not use three-ten-abp in production code (it's only for tests) because it has performance
# issues.
testonly-three-ten-abp = { module = "com.jakewharton.threetenabp:threetenabp", version = "1.4.7" }
wiremock-standalone = { module = "com.github.tomakehurst:wiremock-standalone", version.ref = "wiremockStandalone" }

[bundles]
kotest = ["kotest-runner", "kotest-assertions", "kotest-property", "kotest-property-arbs"]
playservices = ["playservices-base", "playservices-basement", "playservices-tasks"]
maven-resolver = [
    "maven-resolver-api",
    "maven-resolver-connector-basic",
    "maven-resolver-impl",
    "maven-resolver-provider",
    "maven-resolver-transport-file",
    "maven-resolver-transport-http",
    "maven-resolver-util"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serialization-plugin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[versions]
# javalite, protoc and protobufjavautil versions should be in sync while updating and
# it needs to match the protobuf version which grpc has transitive dependency on.
android-lint = "30.3.1"
autovalue = "1.10.1"
coroutines = "1.6.4"
dagger = "2.43.2"
grpc = "1.52.1"
javalite = "3.21.11"
kotlin = "1.7.10"
protoc = "3.21.11"
robolectric = "4.9"
truth = "1.1.2"
protobufjavautil = "3.21.11"
kotest = "5.5.5"

[libraries]
android-lint = { module = "com.android.tools.lint:lint", version.ref = "android-lint"}
android-lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "android-lint"}
android-lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "android-lint"}
android-lint-tests = { module = "com.android.tools.lint:lint-tests", version.ref = "android-lint"}
android-lint-testutils = { module = "com.android.tools:testutils", version.ref = "android-lint"}
androidx-annotation = { module = "androidx.annotation:annotation", version = "1.5.0" }
androidx-core = { module = "androidx.core:core", version = "1.2.0" }
androidx-futures = { module = "androidx.concurrent:concurrent-futures", version = "1.1.0" }
autovalue = { module = "com.google.auto.value:auto-value", version.ref = "autovalue" }
autovalue-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autovalue" }
dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger"}
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version = "2.9.0" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2"}
javax-inject = { module = "javax.inject:javax.inject", version = "1" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-coroutines-tasks = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
okhttp = {module = "com.squareup.okhttp3:okhttp", version = "3.12.13"}
org-json = { module = "org.json:json", version = "20210307" }
playservices-base = { module = "com.google.android.gms:play-services-base", version = "18.1.0"}
playservices-basement = { module = "com.google.android.gms:play-services-basement", version = "18.1.0"}
playservices-tasks = { module = "com.google.android.gms:play-services-tasks", version = "18.0.2"}

# Test libs
androidx-test-core = { module = "androidx.test:core", version = "1.5.0" }
androidx-test-junit = { module = "androidx.test.ext:junit", version = "1.1.4" }
androidx-test-rules = { module = "androidx.test:rules", version = "1.5.0" }
androidx-test-runner = { module = "androidx.test:runner", version = "1.5.1" }
junit = { module = "junit:junit", version = "4.13.2" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
mockito-core = { module = "org.mockito:mockito-core", version = "2.28.2"}
mockito-dexmaker = { module = "com.linkedin.dexmaker:dexmaker-mockito", version = "2.28.3"}
robolectric = {module = "org.robolectric:robolectric", version.ref = "robolectric" }
truth = { module = "com.google.truth:truth", version.ref = "truth"}
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobufjavautil" }
kotest-runner = { module = "io.kotest:kotest-runner-junit4-jvm", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }

[bundles]
kotest = ["kotest-runner", "kotest-assertions", "kotest-property"]
/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Adapted from http://google3/third_party/firebase/dataconnect/emulator/server/api/emulator/emulator_service.proto;l=86;rcl=642658022

// API protos for the dataconnect Emulator Service.

syntax = "proto3";

package google.firebase.dataconnect.emulator;

import "google/firebase/dataconnect/proto/graphql_error.proto";

option java_package = "google.firebase.dataconnect.proto";
option java_multiple_files = true;

service EmulatorService {
  rpc GetEmulatorInfo(GetEmulatorInfoRequest) returns (EmulatorInfo) {
  }

  rpc StreamEmulatorIssues(StreamEmulatorIssuesRequest) returns (stream EmulatorIssuesResponse) {
  }
}

message GetEmulatorInfoRequest {}

message EmulatorInfo {
  // The current version number of the emulator build.
  string version = 1;
  // The services that are currently running in the emulator.
  repeated ServiceInfo services = 2;
}

message ServiceInfo {
  // The Firebase Data Connect Service ID in the resource name.
  string service_id = 1;
  // The Postgres connection string for the emulated service.
  string connection_string = 2;
}

message StreamEmulatorIssuesRequest {
  // Optional query parameter. Default to the local service in dataconnect.yaml.
  string service_id = 1;
}

message EmulatorIssuesResponse {
  repeated EmulatorIssue issues = 1;
}

message EmulatorIssue {
  enum Kind {
    KIND_UNSPECIFIED = 0;
    SQL_CONNECTION = 1;
    SQL_MIGRATION = 2;
    VERTEX_AI = 3;
  }
  Kind kind = 1;
  enum Severity {
    SEVERITY_UNSPECIFIED = 0;
    DEBUG = 1;
    NOTICE = 2;
    ALERT = 3;
  }
  Severity severity = 2;
  string message = 3;
}
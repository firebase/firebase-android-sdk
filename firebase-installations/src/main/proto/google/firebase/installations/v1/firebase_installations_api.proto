// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.firebase.installations.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "com.google.firebase.installations.v1";

// Firebase Installations API
//
// Firebase Installations API enables registration, management and deletion
// of Firebase installations: app instances, webapp instances, or IoT devices
// that use Firebase services.
service FirebaseInstallationsService {
  // Deletes an Installation
  rpc DeleteInstallation(DeleteInstallationRequest)
    returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/installations/*}"
    };
  }

  // Creates (and registers) a new Firebase Installation, incl. its FID and
  // Verification Key (used for authentication purposes)
  // refer to https://cloud.google.com/apis/design/standard_methods
  // for method definition formats.
  rpc CreateInstallation(CreateInstallationRequest) returns (Installation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*}/installations"
      body: "installation"
    };
  }

  // Creates a new short-lived FIS-Auth-Token (Bearer-Token for Installations)
  rpc GenerateAuthToken(GenerateAuthTokenRequest) returns (AuthTokenInfo) {
    option (google.api.http) = {
      post: "/v1/{name=projects/*/installations/*}/authTokens:generate"
      body: "*"
    };
  }
}

// The request to delete the data stored for a specific Installation and
// permanently disable its Firebase Installations ID and authentication
// credentials. This process triggers the Firebase GDPR delete-pipeline.
message DeleteInstallationRequest {
  // Resource name of the installation. It must have the format of
  // `projects/*/installations/*`.
  string name = 1;
}

// The request to register a new Installation.
message CreateInstallationRequest {
  // The parent resource name.
  // Identifies the Cloud Project owning this Installation.
  // We accept both projectID and projectNumber.
  string parent = 1;

  // The resource to create.
  Installation installation = 2;
}

// The request to register a new Installation.
message GenerateAuthTokenRequest {
  // The Firebase Installation requesting for FIS-Auth-Token.
  string name = 1;

  // Optional field that allows the Firebase Installation to update (some of)
  // its attributes with FIS the server (ex: sdk_version) when it requests for a
  // new FIS Auth-Token.
  // (-- go/not-api-precedent: Updating the metadata has no relation to the
  // generation of FIS Auth-Tokens. Ordinarily, generating a FIS Auth-Token and
  // updating metadata should be handled by two separate endpoints.
  // We decided to batch the requests in order to limit the number of necessary
  // requests from the client, given that our users (Firebase Services) are
  // targeting mobile applications and additional network requests increase the
  // startup-time of applications which is undesirable for mobile platform. --)
  Installation installation = 2;
}

message AuthTokenInfo {
  // A new FIS-Auth-Token, created for the Firebase Installation.
  string token = 1;

  // The duration for which this auth_token will be valid.
  // In a response's JSON format, the value is encoded as a string with the
  // suffix "s" (indicating seconds), preceded by the number of seconds.
  // Example: "604800s"
  // (-- go/not-api-precedent: OnePlatform APIs usually do not use prepositions
  // in field names, but we are doing so here to conform to the external OAuth
  // terminology. --)
  google.protobuf.Duration expires_in = 2;
}

// next_id: 9
message Installation {
  // URI of the Firebase Installation with the following format:
  // projects/<PROJECT-NUMBER>/installations/<FID>
  // Example: projects/35006771263/installations/eapzYQai_g8flVQyfKoGs7
  // This field is set only during response.
  string name = 1;

  // Globally unique identifier of the Firebase Installation.
  string fid = 2;

  // GMP App Id - Firebase Application identifier, generated by Firebase Console
  string app_id = 3;

  // The current version of the used FIS client-SDK.
  string sdk_version = 4;

  // The version of the Firebase Installations Internal Authentication scheme.
  // This value is used as Authorization-Type of HTTP-header "Authorization".
  // Compare: https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication
  // The internal client/server authentication of Firebase Installations may
  // change in the future. Initial version is "FIS_v2".
  // This field is optional. If not set the default version is assumed (FIS_v2).
  string auth_version = 5;

  // A refresh token created for / assigned to the Firebase Installation by FIS.
  // The Firebase Installation can use the refresh token to send requests to
  // #GenerateAuthToken in order to request and generate new FIS Auth-Tokens.
  // Used for FIS Internal Auth scheme FIS_v2.
  // This field is set only during response.
  string refresh_token = 6;

  // The verification-key (a.k.a. public-key) is used to authenticate the
  // digital signatures sent by the Firebase Installation in requests to FIS.
  // Used for FIS Internal Auth scheme FIS_v1.
  // The public key is expected to be in X.509 format ("SubjectPublicKeyInfo"),
  // compare RFC 5280 (https://tools.ietf.org/html/rfc5280#section-4.1).
  string verification_key = 7;

  // The initial FIS Auth-Token, created for the Firebase Installation.
  // This field is set only during response.
  // (-- go/not-api-precedent: Ordinarily requesting a FIS Auth-Token should be
  // achieved via a secondary request to endpoint #GenerateAuthToken. However
  // the number of necessary requests has an impact on the startup time
  // (particularly "cold-start") of mobile applications and FIS is used by
  // Firebase Services that are targeting mobile applicatoins. Returning a FIS
  // Auth-Token along with the created Installation resource allows us to reduce
  // our client-server communication to 1 request during cold-start
  // (i.e. 1st startup) of a newly installed app. This improves user experience
  // as it reduces user-perceived latency. --)
  AuthTokenInfo auth_token = 8;
}
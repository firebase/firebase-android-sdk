// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'firebase-library'
    id 'firebase-vendor'
    id 'com.google.protobuf'
}

firebaseLibrary {
    testLab.enabled = true
    publishJavadoc = true
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { }
            }
        }
    }
}

android {
    compileSdkVersion project.targetSdkVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion project.targetSdkVersion
        multiDexEnabled true
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-encoders:17.0.0'
    implementation 'com.google.firebase:firebase-encoders-json:18.0.0'
    implementation 'com.google.firebase:firebase-common:20.3.1'
    implementation 'com.google.firebase:firebase-components:17.1.0'
    implementation 'com.google.firebase:firebase-annotations:16.2.0'
    implementation 'com.google.firebase:firebase-datatransport:18.1.7'
    implementation 'com.google.firebase:firebase-installations-interop:17.1.0'
    implementation 'com.google.android.datatransport:transport-api:3.0.0'
    implementation 'com.google.android.datatransport:transport-runtime:3.1.8'
    runtimeOnly project(':firebase-installations')

    javadocClasspath 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.android.gms:play-services-tasks:18.0.1'
    implementation 'com.google.auto.service:auto-service-annotations:1.0-rc6'
    implementation 'javax.inject:javax.inject:1'

    implementation 'javax.inject:javax.inject:1'
    vendor ('com.google.dagger:dagger:2.43.2') {
        exclude group: "javax.inject", module: "javax.inject"
    }
    annotationProcessor 'com.google.dagger:dagger-compiler:2.43.2'

    compileOnly "com.google.auto.value:auto-value-annotations:1.6.6"
    annotationProcessor "com.google.auto.value:auto-value:1.6.5"
    annotationProcessor project(":encoders:firebase-encoders-processor")

    testImplementation(project(":integ-testing"))
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.3'
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation 'com.google.truth.extensions:truth-proto-extension:1.0'
    testImplementation "com.google.protobuf:protobuf-java-util:$protobufJavaUtilVersion"
    testImplementation 'junit:junit:4.13-beta-2'

    //Android compatible version of Apache httpclient.
    testImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'

    androidTestImplementation 'junit:junit:4.13.1'
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"
}

// ==========================================================================
// Copy from here down if you want to use the google-services plugin in your
// androidTest integration tests.
// ==========================================================================
ext.packageName = "com.google.firebase.ml.modeldownloader"
apply from: '../gradle/googleServices.gradle'
